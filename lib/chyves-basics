#!/bin/sh

# Copyright (c) 2015, pr1ntf (Trent Thompson) All rights reserved.
# Copyright (c) 2016, Justin D Holcomb All rights reserved.
# Copyright (c) 2016, chyves All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# See whether given command is readonly
# and therefore doesn't need root credentials
__readonly_cmd() {
    case "$1" in
        help|-h|get|getall|info|list|version) echo "0"
            ;;
        *) echo "1"
            ;;
    esac
}

# First stage to process command line parameters for chyves
__parse_cmd () {
  case "$1" in
    version)  __verify_number_of_arguments "1" "$#"
              __version
              exit
    ;;
    setup)    __verify_number_of_arguments "2" "$#" "2"
              __setup "$2"
              exit
    ;;
    list)     __verify_number_of_arguments "1" "$#" "3"
              __list "$2" "$3"
              exit
    ;;
    info)     __verify_number_of_arguments "1" "$#" "2"
              __info "$2"
              exit
    ;;
    firmware) __verify_number_of_arguments "2" "$#" "5"
              __resource_functions "firmware" "$2" "$3" "$4"
              exit
    ;;
    iso)      __verify_number_of_arguments "2" "$#" "5"
              __resource_functions "iso" "$2" "$3" "$4"
              exit
    ;;
    create)   __verify_number_of_arguments "2" "$#" "4"
              __create "$2" "$3" "$4"
              exit
    ;;
    start)    __verify_number_of_arguments "2" "$#" "3"
              __start "$2" "$3"
              exit
    ;;
    stop)     __verify_number_of_arguments "2" "$#" "2"
              __stop "$2"
              exit
    ;;
    forcekill) __verify_number_of_arguments "2" "$#" "2"
               __forcekill "$2"
               exit
    ;;
    scram)    __verify_number_of_arguments "1" "$#" "1"
              __scram
              exit
    ;;
    destroy)  __verify_number_of_arguments "2" "$#" "2"
              __destroy "$2"
              exit
    ;;
    rename)   __verify_number_of_arguments "3" "$#" "3"
              __resource_functions "guest" "rename" "$2" "$3"
              exit
    ;;
    delete)   __verify_number_of_arguments "2" "$#" "2"
              __resource_functions "guest" "delete" "$2"
              exit
    ;;
    set)      __verify_number_of_arguments "3" "$#"           # Technically unlimited number of properties can be set.
              __set "$@"
              exit
    ;;
    get)      __verify_number_of_arguments "2" "$#" "3"
              __get "$2" "$3"
              exit
    ;;
    rmpci)    __verify_number_of_arguments "3" "$#" "4"       # Soon to be consolidated
              __rmpci "$2" "$3" "$4"
              exit
    ;;
    add)      __verify_number_of_arguments "3" "$#" "3"
              __add "$2" "$3"
              exit
    ;;
    remove)   __verify_number_of_arguments "3" "$#" "4"
              __remove "$2" "$3" "$4"
              exit
    ;;
    resize)   __verify_number_of_arguments "4" "$#" "4"
              __resize "$2" "$3" "$4"
              exit
    ;;
    disks)    __verify_number_of_arguments "2" "$#" "2"       # Can be consolidated to __list()
              __disks "$2"
              exit
    ;;
    snap)     __verify_number_of_arguments "2" "$#" "2"       # Needs a rework
              __snapguest "$2"
              exit
    ;;
    roll)     __verify_number_of_arguments "2" "$#" "2"       # Needs a rework
              __rollguest "$2"
              exit
    ;;
    clone)    __verify_number_of_arguments "3" "$#" "5"
              __cloneguest "$2" "$3" "$4" "$5"
              exit
    ;;
    console)  __verify_number_of_arguments "2" "$#" "3"       # Tmux support soon
              __console "$2" "$3"
              exit
    ;;
    conreset) __verify_number_of_arguments "1" "$#" "1"       # Can be built to reset just one console
              __conreset
              exit
    ;;
    help|-h)  __help
              exit
    ;;
    dev)      [ "$_DEVELOPER_MODE" == "off" ] && __fault_detected_exit "Developer mode is set to "off", if desired turn on by running 'chyves set dev_mode=on .config primary'"
              [ "$_DEVELOPER_MODE" != "on" ] && set "$_DEVELOPER_MODE"
              $2 "$3" "$4" "$5" "$6" "$7" "$8" "$9"           # Used for developer to test a function directly
              [ "$_DEVELOPER_MODE" != "on" ] && set "$( echo $_DEVELOPER_MODE | sed 's/-/+/g' )"
              exit
    ;;
    *)        __help
              __fault_detected_exit "Unrecognized command: $1. See above for list of correct sub-commands."
    ;;
  esac
}

# Show version
__version() {
	echo "chyves ${_VERSION_LONG}"
}

# Print help page
__help() {
__version
cat << 'EOT'

chyves
  version
  setup <pool>
  list [iso|firmwares|snapshots|.config|.defaults|pools|processes|<property-name>]
  list tap active
  list .config [<pool>|primary]
  list processes [<name>]
  info [-rvstdnakgil|-h]
  iso {list|import|rename|delete} [field1] [field2]
  iso list
  iso import {http-URL|ftp-URL|local-path}
  iso rename <name> <newname>
  iso delete <name>
  firmware {list|import|rename|delete}
  firmware list
  firmware import {http-URL|ftp-URL|local-path}
  firmware rename <name> <newname>
  firmware delete <name>
  create <name> [size] [pool]
  start <name>[,<name2>[,name3]] [iso-resource] 
  stop <name>
  forcekill <name>
  scram
  destroy <name>
  rename <name> <newname>
  delete <name>
  set <property1>=<value> {<name>|.defaults|.config} [<property2>=<value>]...
  set <property1>=<value> {<name1>,<name2>,<name3>} [<property2>=<value>]...
  get {<property>|all} <name>
  rmpci [-f] [name] [pcidev:N]
  add [name] [size]
  remove [-f] [name] [diskN]
  resize [name] [diskN] [size]
  disks [name]
  snap <name>[@<snapshotname>]
  roll <name>[@<snapshotname>]
  clone {-c|-r} <name> <clonename> [dest-pool]
  clone {-c|-r} <name> {<clonename1>,<clonename2>,<clonename3>} [dest-pool]
  console <name> [-t]
  conreset
  help

Syntax nomenclature:
 subcommand       - Text without brackets are assumed to be required.
 [optional]       - An optional field
 [optional|list]  - An optional list, valid if not used
 {require|list}   - A require list where one option must be used
 <user-input>     - User supplied input field. Required when not contain in [ ]
 [-abcdefg]       - An optional flag field but must start with a "-" and
                    followed by any combination, in any order. (Eg: "-gca" is
                    valid.)
 name             - chyves guest name

EOT
}
