NAME
chyves(8) - bhyve(8) front end manager version 0.0.0

SYNOPSIS
chyves version
chyves setup pool=<pool> kmod=<0|1> net=<interface-name>
chyves list [iso|firmwares|snapshots|.config|processes|<property-name>]
chyves list tap active
chyves list .config [<pool>|primary]
chyves list processes [<name>]
chyves info [-rvstdnakgil|-h]
chyves iso {list|fetch|rename|delete}
chyves iso list
chyves iso fetch {http-URL|ftp-URL|local-path}
chyves iso rename <oldname> <newname>
chyves iso delete <name>
chyves firmware {list|fetch|rename|delete}
chyves firmware list
chyves firmware fetch {http-URL|ftp-URL|local-path}
chyves firmware rename <oldname> <newname>
chyves firmware delete <name>
chyves create <name> [size] [pool]
chyves install <name> <iso-file>
chyves load [name] [path/to/bootdisk]
chyves boot [name] [runmode] [pcidevices]
chyves start <name> [-s | -a]
chyves stop <name>
chyves forcekill <name>
chyves scram
chyves destroy <name>
chyves rename <name> <newname>
chyves delete <name>
chyves set <property1>=<value> {<name>|.defaults} [prop2=value]...
chyves get {<property>|all} <name>
chyves rmpci [-f] [name] [pcidev:N]
chyves add [name] [size] [[pool]]
chyves remove [-f] [name] [diskN]
chyves resize [name] [diskN] [size]
chyves disks [name]
chyves snap <name>[@<snapshotname>]
chyves roll <name>[@<snapshotname>]
chyves clone [-c | -r] <name> <clonename>
chyves export <name>
chyves console <name> -t
chyves conreset
chyves help

Syntax nomenclature:
 list             - Text without brackets are assumed to be required, "list" in
                    this case.
 [optional]       - An optional field
 [optional|list]  - An optional list, valid if not used
 {require|list}   - A require list where one option much be used
 <user-input>     - User supplied input field. Required when not contain in [ ]
 [-abcdefg]       - An optional field but must start with a "-" and followed by
                    any combination, in any order. Eg. "-gca" is valid.
 name             - chyves guest name

DESCRIPTION
The chyves(8) Bourne shell script utilizes the FreeBSD hypervisor bhyve(8),
zfs(8), and nmdm(4) to start and manage type 2 virtualized guests. bhyve
settings are stored in ZFS user properties and datasets are used to store
important guest files such as the block devices, grub.cfg, and device.map
files. chyves uses the virtio drivers built into the GENERIC kernel
for network virtualization.

Guests are provided block storage device(s) via ZFS volumes on the host.
Datasets are used to organize these block devices and other important data
in a hierarchical structure. ZFS user properties are referenced when
starting a guest to set the values such as the CPU count, RAM allotment, and
other qualities about the guest.

	apool/chyves
	apool/chyves/.config
	apool/chyves/Firmware
	apool/chyves/guests/
	apool/chyves/guests/.defaults
	apool/chyves/guests/bguest1
	apool/chyves/guests/bguest1/disk0
	apool/chyves/guests/bguest2
	apool/chyves/guests/bguest2/disk0
	apool/chyves/guests/bguest2/disk1
	apool/chyves/ISO


Single and multi-pool configurations are supported. Additional pools get mounted
to /chyves/poolname and are set to a 'secondary' pool role. In the dataset
'$pool/chyves/.config', the property 'chyves:pool_role' is used to store the
role of that pool containing the chyves datasets. Valid values are
primary|secondary|offline. Only a single 'primary' dataset can be configured per
system. Only the primary dataset contains the ISO and firmware resources. The
primary pool also exclusively contains the guests/.default dataset which is
referenced when setting properties for new guests. The primary pool is also
where new guests are created when the [pool] argument is not specified. All
other active pools need to be set as in the "secondary" role. "offline"
pools are left untouched and is a good role to put a local replicated backup.

Example of a multi-pool dataset hierarchy:
  prim_pool/chyves/guests/
                  /guests/.defaults
                  /.config
                           chyves:pool_role=primary
                  /ISO
                  /Firmware
  secd_pool/chyves/guests
                  /.config
                          chyves:pool_role=secondary
  anther_pl/chyves/guests
                  /.config
                          chyves:pool_role=secondary
  offlinePL/chyves/guests
                  /.config
                          chyves:pool_role=offline

Example of a single pool dataset hierarchy:
  zroot/chyves/guests
              /guests/.defaults
              /.config
                      chyves:pool_role=primary
              /ISO
              /Firmware

The virtio drivers are used to para-virtualize I/O for disk and network access.
ZFS volumes are passed as block devices to the guests. For the networking
portion, a guest is presents a PCI Ethernet device, the host communicates with
this device through a tap interface which in-turn is connected to a bridge
interface which can also optionally have physical interface or vlan interface
members.



OPTIONS
version     Prints the current running version of chyves

setup       Installs required ZFS datasets, loads the necessary kernel modules,
            and configures a tap and bridge interface for chyves.
            Usage: 'chyves setup pool=[poolname] kmod=[0|1] net=[iface]' where
            [poolname] is the pool you want to install chyves on, kmod=[0|1] is
            if you want chyves to load or unload the kernel modules. 1 is to
            load. net=[iface] will set up a network bridge to the specified
            interface.

list        Displays information about on general guest info with the no
            argument, "iso" will display ISOs resources, "snapshots" will
            display snapshots for all guests, "tap" will display all taps
            including inactive taps, "tap active" will list only active taps,
            and "con" will display configured consoles.

            $null		Lists properties about the guests and their disks
            using flags OS, Loader, and Description in a per pool table.
            to control level of output. Fields include CPU count, RAM, Disk
            Size, Pool, OS, Loader, Tap, Console, VMM status, Running status,
            rcboot flag, and the description.

            iso         Lists the installed ISOs in the /chyves/ISO directory.

            firmware    Lists the firmwares in the /chyves/Firmware directory.

            snapshots   List all of the snapshots for all the guests. Does not
                        show snapshots of disks (they are there, though).

            tap         Lists all of the network taps taken by chyves guests
                        This will list taps that are not active as well. Using
                        the argument chyves list tap active displays only
                        active taps.

            con         Lists all of the nullmodem consoles taken by chyves
                        guests.

            info        Lists all the guests along with their RAM, CPU, Size,
                        OS, Loader, and Description (if -d is passed).

fetchiso    Fetches installation ISO or install image and creates a
            dataset for it.
            Usage: 'chyves fetchiso [URL]' where [URL] is the HTTP or FTP
            URL to fetchiso from the internet.

cpiso       Copies installation ISO or install image from your host and
            creates a dataset for it.
            Usage: 'chyves cpiso [path]' where [path] is the full path to
            ISO file on the host machine.

renameiso   Renames an ISO
            Usage: 'chyves renameiso [ISO] [newname]' where [ISO] is the
            name of the ISO you would like to rename. [newname]
            is a new name.

rmiso       Removes installed ISO from /chyves/ISO
            Usage: 'chyves rmiso [ISO]' where [ISO] is the name of the ISO
            you would like to delete.

fetchfw     Fetches firmware and creates a dataset for it.
            Usage: 'chyves fetchfw [URL]' where [URL] is the HTTP or FTP URL
            to fetch from the internet.

cpfw        Copies firmware from your host and creates a dataset for it.
            Usage: 'chyves cpfw [path]' where [path] is the full path to
            firmware file on the host machine.

renamefw    Renames a Firmware
            Usage: 'chyves renamefw [firmware] [newname]' where [firmware]
            is the name of the firmware you would like to rename.
            [newname] is a new name.

rmfw        Removes installed firmware from /chyves/Firmware
            Usage: 'chyves rmfw [firmware]' where [firmware] is the name of
            the firmware you would like to delete.

create      Creates new guest operating system.
            Usage: 'chyves create [name] [size] [[pool]]' where [name] is
            the name you would like to use, [size] is the size of the
            virtual block device in '16G' format where the capital G
            signifies gigabytes. If you specify the pool, the first disk
            gets added on that pool.

install     Loads and boots into ISO for guest installation.
            Usage: 'chyves install [name] [ISO]' where [name] is the name
            of the guest, and [ISO] is the name of the ISO you would
            like to boot from in the form of: 'install.iso'

load        Loads the guest operating system bootloader and resources.
            Usage: 'chyves load [name] [ISO]'
            where [name]is the name of the guest operating system.
            [bootimg] is the path to the boot medium

boot        Boots the guest into the operating system. 'chyves run' needs
            to be run before this is done.
            Usage: 'chyves boot [name] [runmode] [pci]'
            where [name]is the name of the guest operating system.
            [runmode] describes how to start the guest:
            0 = start only once
            1 = regular persist
            Stop if the guest is powering off
            2 = always persist
            Always restart the guest
            [pci] is a space separated list of pci devices
            based on slot-less bhyve -s commands.
            Example:
            "ahci-hd,/path/disk.img virtio-net,tap0"
            Note: hostbridge and lpc are automatically
            added

start       Starts the guest operating system. (Combines load & boot)
            Usage: 'chyves start [name] [-s | -a]'
            where [name] is the name of the guest operating system.
            [-s] will cause the guest to be started once
            [-a] will cause the guest to always restart

stop        Gracefully stops guest operating system.
            Usage: 'chyves stop [name]' where [name] is the name
            of the guest operating system.


forcekill   Forces the guest to stop. Runs kill -9 and destroys the guest
            in VMM. USE WITH EXTREME CAUTION AND AS A LAST RESORT. Can be
            used to kill guests stuck at the GRUB console that you
            do not have access to.

scram       Gracefully stop all bhyve guests. Does not destroy resources.

destroy     Destroys guest resources.
            Usage: 'chyves destroy [name]' where [name] is the name
            of the guest operating system. Destroying a guest does
            not [delete] a guest from the host, it destroys the guest in VMM.

rename      Renames the guest
            Usage: 'chyves rename [name] [newname]' where [name] is the
            name of the guest and [newname] is the new name.

delete      Deletes all data for the guest.
            Usage: 'chyves delete [name]' where [name] is the name
            of the guest operating system. If [-f] is supplied before the
            [name], there is no prompt to delete.

set         Sets ZFS properties for guests one at a time
            Usage: 'chyves set [name] [prop1=value] [prop2=value]...' where
            [name] is the name of the guest operating system.
            Using the [name] '.defaults' sets the defaults for newly created
            guests. Only ram, cpu, persist, boot, loader, os, and bargs
            properties are used as defaults for new guests.

            Properties:
            ram=[nS]
              [n] is a number and [S] is the size in M megabytes or G gigabytes.
            ram=2G for 2 Gigabytes of RAM allocation.
            cpu=[n]
              Sets number [n] of cpu cores to use, up to 16.
            size=[nS]
              Used during setup only to indicate the block size of the first
              harddrive. Resetting this property does not resize the block
              device. Please use chyves resize instead.
              [n] is a number in *bytes.
              [S] is the size in "" bytes, "K" Kilobytes, "M" Megabytes, "G"
              gigabytes, or "T" Terabytes.
            con=nmdm[n]
              Attaches null modem console. [n] must be a unique number and
              can not be shared between started guests.
            uuid= Sets UUID for bhyve instance. Required when importing
              Windows guests for retaining license activation but other
              uses as well. Normally set by /bin/uuidgen at creation.
            tap=tap[n](,tap[n]) (tap device for virtio-net)
              [n] is a generic number to specify the tap interface to use.
              Specify multiple tap devices using a comma. Taps are process-
              locked and can not be shared by simultaneously by multiple
              guests.
              Single tap: chyves set [name] tap=tap0
              Multiple tap : chyves set [name] tap=tap0,tap1,tap2,tap3
            mac_tap[n]=[MAC Address]
              [n] is a generic number to specify the tap interface to use
              Forces a specific MAC address to be attached to the
              network adapter in the guest OS. chyves does not check
              for a valid MAC address, so double check the property.
            pcidev:[n]=[spec]
              Generic way to add devices to the guest.
              [n] is a generic random number or string
              [spec] defines a virtual device added to the guest
              by using a bhyve -s argument without the pcislot
              or function argument. PCI slot numbers are assigned
              automatically by chyves.
              Examples: "pcidev:1=passthru,2/0/0"
              "pcidev:2=ahci-hd,/some/place/disk.img"
            os=[name]
              Supported values are openbsd59, openbsd58, openbsd57, netbsd,
              debian, d8lvm, centos6, centos7, arch, gentoo and custom. Any
              other values are handled by a catch-all and largely intended for
              bhyveload guests.
            boot=[0|1]
              Tells chyves to start guests upon boot when "1" is set and
              the rc.conf iohyve_enable="YES" directive is configured.
            loader=[bhyveload|grub-bhyve|uefi]
              Tells which loader to used to boot guest. bhyveload is for
              FreeBSD based guests. grub-bhyve is used for all other guests.
              description="<INSERT BRIEF DESCRIPTION>"
              Used to describe guests. Use double quotes when using spaces.
            notes="<INSERT FURTHER NOTES>"
              Used to further describe guests. Use double quotes when using
              spaces.
            bargs=[]
              Used to pass flags directly to bhyve. See bhyve(8) for complete
              list of flags.
            persist=[0|1|2]
              Used to indicate how to handle when the bhyve process ends.
              [0] - Leave powered off when bhyve process closes
              [1] - Power off guest if shutdown state is detected, attempt to
              reboot otherwise. This is the default.
              [2] - Always attempt to reboot.

get         Gets ZFS properties for guests
            Usage: 'chyves get [prop] [name]' where [name] is the name of the
            guest. [prop] is the property you want to view.
            Usage: 'chyves get all [name]' where [name] is the guest name. All
            properties are displayed.
            Usage: 'chyves get all' All
            properties are displayed.

rmpci       Removes a pcidev from the guest
            Usage: 'chyves rmpci [name] [pcidev:N]' where [name] is the name
            of the guest operating system. [pcidev:N] is the PCI
            device you want removed. Ex: 'pcidev:3' If [-f] is supplied
            before the [name], there is no prompt to remove.

add         Adds a new disk to the guest.
            Usage: 'chyves add [name] [size] [[pool]]' where [name] is
            the name of the guest, [size] is the size of the
            virtual block device in '16G' format where the capital G
            signifies gigabytes. If pool is specified, the disk gets
            added on that pool

remove      Removes a disk from the guest. Cannot be disk0.
            Usage: 'chyves remove [name] [diskN]' where [name] is
            the name of the guest, [diskN] is the disk you would
            like to remove from the guest. See 'chyves disks' for
            a list of disks for a guest. If [-f] is supplied before the
            [name], there is no prompt to remove.

resize      Resizes a disk. THIS CAN BREAK THINGS ON THE GUEST.
            Usage: 'chyves resize [name] [diskN] [size]' where [name] is
            the name of the guest, [diskN] is the disk you would
            like to remove from the guest, and [size] is the size
            of the virtual block device in '16G' format where the
            capital G signifies gigabytes.
            See 'chyves disks' for a list of disks for a guest

disks       Lists the disks attached to a guest.
            Usage: 'chyves disks [name]' where [name] is the name
            of the guest operating system.

snap        Take a snapshot of a guest.
            Usage: 'chyves snap [name]@[snapshot]' where [name] is the
            name of the guest and [snapshot] is what you would
            like to name the snapshot.

roll        Rollback guest to a snapshot.
            Usage: 'chyves roll [name]@[snapshot]' where [name] is the
            name of the guest and [snapshot] is what you would
            like to name the snapshot.

clone       Clone a guest. Note that this will clone all of the properties.
            If you want to use the clone and the original guest at the
            same time you will need to change the tap and nmdm properties
            or use the -r option to have chyves do this for you
            Usage: 'chyves clone [-c | -r] [name] [clonename]' where [name]
            is the name of the guest and [clonename] is what you would
            like to name the new clone.

export      Export a guest with all of it's properties and disks to a
            GZip'd tarball. Property file is in a ucl-type format.
            Disks output to a raw file, allowing for other managers using
            ahci-hd emulation to use them. Tarball is put in the guest
            dataset ex: /chyves/guestname/guestname.tar.gz
            Usage: 'chyves export [name]' where [name] is the name of the
            guest.

console     Consoles into a guest operating system. Utilizes nmdm(4) and
            cu(1) to open a console on a guest operating system. Since
            bhyve(8) does not emulate video. The guests need to be administered
            via a serial communication device. Since chyves uses cu(1), you will
            need to press the tilde (~) twice then period (.) to exit the
            console. To exit type "~~." quickly, sometimes hitting Enter is
            required first. If that fails exit the console, try pressing tilde
            (~) then press Control + D (^D). Note that on some machines, you
            cannot escape the console. See conreset below to escape all
            consoles.
            Usage: 'chyves console [name]' where [name] is the name
            of the guest operating system.

conreset    Kills all running instances of "cu".

help        Prints version information and command valid syntax.

EXAMPLES

Setup chyves on zpool named zroot:

  chyves setup pool=zroot

Fetch FreeBSD install ISO for later:

  chyves fetchiso ftp://ftp.freebsd.org/.../10.2/FreeBSD....iso

Create a new FreeBSD guest named bsdguest with an 8 Gigabyte virtual HDD:

  chyves create bsdguest 8G

List ISO's:

  chyves isolist

Install the FreeBSD guest bsdguest:

  chyves install bsdguest FreeBSD-10.2-RELEASE-amd64-bootonly.iso

Console into the installation:

  chyves console bsdguest

Once installation is done, exit console (~~.) and destroy guest:

  chyves destroy bsdguest

Now that the guest is installed, it can be started like usual:

  chyves start bsdguest

Some guest os's can be gracefully stopped:

  chyves stop bsdguest

List all guests created with:

  chyves list

You can change guest properties by using set:

  chyves set bsdguest ram=512M
  chyves set bsdguest cpu=1
  chyves set bsdguest tap=tap0
  chyves set bsdguest con=nmdm0

Get a specific guest property:

  chyves get ram bsdguest

Get all guest properties:

  chyves get all bsdguest

Install and run a Debian guest:

  chyves create debianvm 8G
  chyves set debianvm loader=grub-bhyve os=debian
  chyves install debianvm deb8.1-net.iso
  chyves start debianvm

Take a snapshot of a guest:

  chyves snap bsdguest@beforeupdate
  chyves snaplist
  chyves roll bsdguest@beforeupdate

Make an independent clone of a guest:

  chyves clone bsdguest dolly

AUTHOR
Justin D Holcomb -- @EpiJunkie
Trent -- @pr1ntf

SEE ALSO
bhyve(8), bhyveload(8), zfs(8), nmdm(4), cu(1), if_bridge(4), grub2-bhyve(8),
chyves-utils(8), virtio(4)
