.\" Text automatically generated by txt2man
.TH chyves 8 "22 April 2016" "" "FreeBSD System Manager's Manual"
.SH NAME
\fBchyves(8) \fP- \fBbhyve\fP(8) front end manager version 0.0.0
\fB
.SH SYNOPSIS
.nf
.fam C
\fBchyves\fP \fIversion\fP
\fBchyves\fP \fIsetup\fP pool=[poolname] kmod=[0|1] net=[interface]
\fBchyves\fP \fIlist\fP [$null|trad|iso|firmware|snapshots|tap|con]
\fBchyves\fP \fIlist\fP \fItap\fP \fIactive\fP
\fBchyves\fP \fIinfo\fP [\fB-vsdl\fP]
\fBchyves\fP \fIfetchiso\fP [\fIURL\fP]
\fBchyves\fP \fIcpiso\fP [\fIpath\fP]
\fBchyves\fP \fIrenameiso\fP [\fIISO\fP] [\fInewname\fP]
\fBchyves\fP \fIrmiso\fP [\fIISO\fP]
\fBchyves\fP \fIfetchfw\fP [\fIURL\fP]
\fBchyves\fP \fIcpfw\fP [\fIpath\fP]
\fBchyves\fP \fIrenamefw\fP [\fIfirmware\fP] [\fInewname\fP]
\fBchyves\fP \fIrmfw\fP [\fIfirmware\fP]
\fBchyves\fP \fIcreate\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]
\fBchyves\fP \fIinstall\fP [\fIname\fP] [\fIISO\fP]
\fBchyves\fP \fIload\fP [\fIname\fP]
\fBchyves\fP \fIboot\fP [\fIname\fP] [\fIISO\fP]
\fBchyves\fP \fIstart\fP [\fIname\fP] [\fB-a\fP | \fB-s\fP]
\fBchyves\fP \fIstop\fP [\fIname\fP]
\fBchyves\fP \fIforcekill\fP [\fIname\fP]
\fBchyves\fP \fIscram\fP
\fBchyves\fP \fIdestroy\fP [\fIname\fP]
\fBchyves\fP \fIrename\fP [\fIname\fP] [\fInewname\fP]
\fBchyves\fP \fIdelete\fP [\fB-f\fP] [\fIname\fP]
\fBchyves\fP \fIset\fP [\fIname\fP|.defaults] [\fIprop1=value\fP] [prop2=value]\.\.\.
\fBchyves\fP \fIget\fP [\fIname\fP] [\fIprop\fP]
\fBchyves\fP \fIrmpci\fP [\fB-f\fP] [\fIname\fP] [\fIpcidev:N\fP]
\fBchyves\fP \fIgetall\fP [\fIname\fP]
\fBchyves\fP \fIadd\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]
\fBchyves\fP \fIremove\fP [\fB-f\fP] [\fIname\fP] [\fIdiskN\fP]
\fBchyves\fP \fIresize\fP [\fIname\fP] [\fIdiskN\fP] [\fIsize\fP]
\fBchyves\fP \fIdisks\fP [\fIname\fP]
\fBchyves\fP \fIsnap\fP [\fIname\fP]@[snapshotname]
\fBchyves\fP \fIroll\fP [\fIname\fP]@[snapshotname]
\fBchyves\fP \fIclone\fP [\fB-c\fP | \fB-r\fP] [\fIname\fP] [\fIclonename\fP]
\fBchyves\fP \fIexport\fP [\fIname\fP]
\fBchyves\fP \fIconsole\fP [\fIname\fP]
\fBchyves\fP \fIconreset\fP
\fBchyves\fP \fIhelp\fP
\fBchyves\fP \fIman\fP

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
The \fBchyves\fP(8) Bourne shell script utilizes the FreeBSD hypervisor \fBbhyve\fP(8),
\fBzfs\fP(8), and \fBnmdm\fP(4) to \fIstart\fP and manage type 2 virtualized guests. bhyve
settings are stored in ZFS user properties and datasets are used to store
important guest files such as the block devices, grub.cfg, and device.map
files. \fBchyves\fP uses the virtio drivers built into the GENERIC kernel
for network virtualization.
.PP
Guests are provided block storage \fBdevice\fP(s) via ZFS volumes on the host.
Datasets are used to organize these block devices and other important data
in a hierarchical structure. ZFS user properties are referenced when
starting a guest to \fIset\fP the values such as the CPU count, RAM allotment, and
other qualities about the guest.
.PP
.nf
.fam C
        apool/chyves
        apool/chyves/.config
        apool/chyves/Firmware
        apool/chyves/guests/
        apool/chyves/guests/.defaults
        apool/chyves/guests/bguest1
        apool/chyves/guests/bguest1/disk0
        apool/chyves/guests/bguest2
        apool/chyves/guests/bguest2/disk0
        apool/chyves/guests/bguest2/disk1
        apool/chyves/ISO


.fam T
.fi
Single and multi-\fIpool\fP configurations are supported. Additional pools \fIget\fP mounted
to /\fBchyves\fP/poolname and are \fIset\fP to a 'secondary' \fIpool\fP role. In the dataset
\(cq$\fIpool\fP/\fBchyves\fP/.config', the property '\fBchyves\fP:pool_role' is used to store the
role of that \fIpool\fP containing the \fBchyves\fP datasets. Valid values are
primary|secondary|offline. Only a single 'primary' dataset can be configured per
system. Only the primary dataset contains the \fIISO\fP and \fIfirmware\fP resources. The
primary \fIpool\fP also exclusively contains the guests/.default dataset which is
referenced when setting properties for new guests. The primary \fIpool\fP is also
where new guests are created when the [\fIpool\fP] argument is not specified. All
other \fIactive\fP pools need to be \fIset\fP as in the "secondary" role. "offline"
pools are left untouched and is a good role to put a local replicated backup.
.PP
Example of a multi-\fIpool\fP dataset hierarchy:
prim_pool/\fBchyves\fP/guests/
/guests/.defaults
/.config
\fBchyves\fP:pool_role=primary
/\fIISO\fP
/Firmware
secd_pool/\fBchyves\fP/guests
/.config
\fBchyves\fP:pool_role=secondary
anther_pl/\fBchyves\fP/guests
/.config
\fBchyves\fP:pool_role=secondary
offlinePL/\fBchyves\fP/guests
/.config
\fBchyves\fP:pool_role=offline
.PP
Example of a single \fIpool\fP dataset hierarchy:
zroot/\fBchyves\fP/guests
/guests/.defaults
/.config
\fBchyves\fP:pool_role=primary
/\fIISO\fP
/Firmware
.PP
The virtio drivers are used to para-virtualize I/O for disk and network access.
ZFS volumes are passed as block devices to the guests. For the networking
portion, a guest is presents a PCI Ethernet device, the host communicates with
this device through a \fItap\fP interface which in-turn is connected to a bridge
interface which can also optionally have physical interface or vlan interface
members.
.RE
.PP


.SH OPTIONS
.TP
.B
\fIversion\fP
Prints the current running \fIversion\fP of \fBchyves\fP
.TP
.B
\fIsetup\fP
Installs required ZFS datasets, loads the necessary kernel modules, and
configures a \fItap\fP and bridge interface for \fBchyves\fP.
Usage: '\fBchyves\fP \fIsetup\fP \fIpool\fP=[poolname] kmod=[0|1] net=[iface]' where
[poolname] is the \fIpool\fP you want to \fIinstall\fP \fBchyves\fP on, kmod=[0|1] is if you
want \fBchyves\fP to \fIload\fP or unload the kernel modules. 1 is to \fIload\fP. net=[iface]
will \fIset\fP up a network bridge to the specified interface.
.TP
.B
\fIlist\fP
Takes argument to display information about on general guest \fIinfo\fP
with the no argument or "trad", "iso" will display ISOs resources,
"snapshots" will display snapshots for all guests, "\fItap\fP" will display
all taps including inactive taps, "\fItap\fP \fIactive\fP" will \fIlist\fP only \fIactive\fP
taps, and "con" will display configured consoles.
.RS
.TP
.B
$null or trad
Lists properties about the guests and their \fIdisks\fP
using flags OS, Loader, and Description in a per \fIpool\fP table.
to control level of output. Fields include CPU count, RAM, Disk
Size, Pool, OS, Loader, Tap, Console, VMM status, Running status,
rcboot flag, and the description.
.TP
.B
iso
Lists the installed ISOs in the /\fBchyves\fP/\fIISO\fP directory.
.TP
.B
\fIfirmware\fP
Lists the firmwares in the /\fBchyves\fP/Firmware directory.
.TP
.B
snapshots
List all of the snapshots for all the guests. Does not show
snapshots of \fIdisks\fP (they are there, though).
.TP
.B
\fItap\fP
Lists all of the network taps taken by \fBchyves\fP guests
This will \fIlist\fP taps that are not \fIactive\fP as well. Using the argument
\fBchyves\fP \fIlist\fP \fItap\fP \fIactive\fP displays only \fIactive\fP taps.
.TP
.B
con
Lists all of the nullmodem consoles taken by \fBchyves\fP guests.
.TP
.B
\fIinfo\fP
Lists all the guests along with their RAM, CPU, Size,
OS, Loader, and Description (if \fB-d\fP is passed).
.RE
.TP
.B
\fIfetchiso\fP
Fetches installation \fIISO\fP or \fIinstall\fP image and creates a
dataset for it.
Usage: '\fBchyves\fP \fIfetchiso\fP [\fIURL\fP]' where [\fIURL\fP] is the HTTP or FTP \fIURL\fP to
\fIfetchiso\fP from the internet.
.TP
.B
\fIcpiso\fP
Copies installation \fIISO\fP or \fIinstall\fP image from your host and
creates a dataset for it.
Usage: '\fBchyves\fP \fIcpiso\fP [\fIpath\fP]' where [\fIpath\fP] is the full \fIpath\fP to
\fIISO\fP file on the host machine.
.TP
.B
\fIrenameiso\fP
Renames an \fIISO\fP
Usage: '\fBchyves\fP \fIrenameiso\fP [\fIISO\fP] [\fInewname\fP]' where [\fIISO\fP] is the
\fIname\fP of the \fIISO\fP you would like to \fIrename\fP. [\fInewname\fP]
is a new \fIname\fP.
.TP
.B
\fIrmiso\fP
Removes installed \fIISO\fP from /\fBchyves\fP/\fIISO\fP
Usage: '\fBchyves\fP \fIrmiso\fP [\fIISO\fP]' where [\fIISO\fP] is the \fIname\fP of the \fIISO\fP
you would like to \fIdelete\fP.
.TP
.B
\fIfetchfw\fP
Fetches \fIfirmware\fP and creates a dataset for it.
Usage: '\fBchyves\fP \fIfetchfw\fP [\fIURL\fP]' where [\fIURL\fP] is the HTTP or FTP \fIURL\fP to
fetch from the internet.
.TP
.B
\fIcpfw\fP
Copies \fIfirmware\fP from your host and creates a dataset for it.
Usage: '\fBchyves\fP \fIcpfw\fP [\fIpath\fP]' where [\fIpath\fP] is the full \fIpath\fP to
\fIfirmware\fP file on the host machine.
.TP
.B
\fIrenamefw\fP
Renames a Firmware
Usage: '\fBchyves\fP \fIrenamefw\fP [\fIfirmware\fP] [\fInewname\fP]' where [\fIfirmware\fP]
is the \fIname\fP of the \fIfirmware\fP you would like to \fIrename\fP.
[\fInewname\fP] is a new \fIname\fP.
.TP
.B
\fIrmfw\fP
Removes installed \fIfirmware\fP from /\fBchyves\fP/Firmware
Usage: '\fBchyves\fP \fIrmfw\fP [\fIfirmware\fP]' where [\fIfirmware\fP] is the \fIname\fP of
the \fIfirmware\fP you would like to \fIdelete\fP.
.TP
.B
\fIcreate\fP
Creates new guest operating system.
Usage: '\fBchyves\fP \fIcreate\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]' where [\fIname\fP] is
the \fIname\fP you would like to use, [\fIsize\fP] is the \fIsize\fP of the
virtual block device in '16G' format where the capital G
signifies gigabytes. If you specify the \fIpool\fP, the first disk
gets added on that \fIpool\fP.
.TP
.B
\fIinstall\fP
Loads and boots into \fIISO\fP for guest installation.
Usage: '\fBchyves\fP \fIinstall\fP [\fIname\fP] [\fIISO\fP]' where [\fIname\fP] is the \fIname\fP
of the guest, and [\fIISO\fP] is the \fIname\fP of the \fIISO\fP you would
like to \fIboot\fP from in the form of: 'instal.iso'
.TP
.B
\fIload\fP
Loads the guest operating system bootloader and resources.
Usage: '\fBchyves\fP \fIload\fP [\fIname\fP] [\fIISO\fP]'
where [\fIname\fP]is the \fIname\fP of the guest operating system.
[bootimg] is the \fIpath\fP to the \fIboot\fP medium
.TP
.B
\fIboot\fP
Boots the guest into the operating system. '\fBchyves\fP run' needs
to be run before this is done.
Usage: '\fBchyves\fP \fIboot\fP [\fIname\fP] [runmode] [pci]'
where [\fIname\fP]is the \fIname\fP of the guest operating system.
[runmode] describes how to \fIstart\fP the guest:
0 = \fIstart\fP only once
1 = regular persist
Stop if the guest is powering off
2 = always persist
Always restart the guest
[pci] is a space separated \fIlist\fP of pci devices
based on slot-less bhyve \fB-s\fP commands.
Example:
"ahci-hd,/\fIpath\fP/disk.img virtio-net,tap0"
Note: hostbridge and lpc are automatically
added
.TP
.B
\fIstart\fP
Starts the guest operating system. (Combines \fIload\fP & \fIboot\fP)
Usage: '\fBchyves\fP \fIstart\fP [\fIname\fP] [\fB-s\fP | \fB-a\fP]'
where [\fIname\fP] is the \fIname\fP of the guest operating system.
[\fB-s\fP] will cause the guest to be started once
[\fB-a\fP] will cause the guest to always restart
.TP
.B
\fIstop\fP
Gracefully stops guest operating system.
Usage: '\fBchyves\fP \fIstop\fP [\fIname\fP]' where [\fIname\fP] is the \fIname\fP
of the guest operating system.
.TP
.B
\fIforcekill\fP
Forces the guest to \fIstop\fP. Runs kill \fB-9\fP and destroys the guest
in VMM. USE WITH EXTREME CAUTION AND AS A LAST RESORT. Can be
used to kill guests stuck at the GRUB \fIconsole\fP that you
do not have access to.
.TP
.B
\fIscram\fP
Gracefully \fIstop\fP all bhyve guests. Does not \fIdestroy\fP resources.
.TP
.B
\fIdestroy\fP
Destroys guest resources.
Usage: '\fBchyves\fP \fIdestroy\fP [\fIname\fP]' where [\fIname\fP] is the \fIname\fP
of the guest operating system. Destroying a guest does
not [\fIdelete\fP] a guest from the host, it destroys the guest in VMM.
.TP
.B
\fIrename\fP
Renames the guest
Usage: '\fBchyves\fP \fIrename\fP [\fIname\fP] [\fInewname\fP]' where [\fIname\fP] is the
\fIname\fP of the guest and [\fInewname\fP] is the new \fIname\fP.
.TP
.B
\fIdelete\fP
Deletes all data for the guest.
Usage: '\fBchyves\fP \fIdelete\fP [\fIname\fP]' where [\fIname\fP] is the \fIname\fP
of the guest operating system. If [\fB-f\fP] is supplied before the
[\fIname\fP], there is no prompt to \fIdelete\fP.
.TP
.B
\fIset\fP
Sets ZFS properties for guests one at a time
Usage: '\fBchyves\fP \fIset\fP [\fIname\fP] [\fIprop1=value\fP] [prop2=value]\.\.\.' where
[\fIname\fP] is the \fIname\fP of the guest operating system.
Using the [\fIname\fP] '.defaults' sets the defaults for newly created guests.
Only ram, cpu, persist, \fIboot\fP, loader, os, and bargs properties are used as
defaults for new guests.
.RS
.PP
Properties:
ram=[nS]
[n] is a number and [S] is the \fIsize\fP in M megabytes or G gigabytes.
ram=2G for 2 Gigabytes of RAM allocation.
cpu=[n]
Sets number [n] of cpu cores to use, up to 16.
\fIsize\fP=[nS]
Used during \fIsetup\fP only to indicate the block \fIsize\fP of the first
harddrive. Resetting this property does not \fIresize\fP the block
device. Please use \fBchyves\fP \fIresize\fP instead.
[n] is a number in *bytes.
[S] is the \fIsize\fP in "" bytes, "K" Kilobytes, "M" Megabytes, "G"
gigabytes, or "T" Terabytes.
con=nmdm[n]
Attaches null modem \fIconsole\fP. [n] must be a unique number and
can not be shared between started guests.
uuid= Sets UUID for bhyve instance. Required when importing
Windows guests for retaining license activation but other
uses as well. Normally \fIset\fP by /bin/uuidgen at creation.
\fItap\fP=\fItap\fP[n](,\fItap\fP[n]) (\fItap\fP device for virtio-net)
[n] is a generic number to specify the \fItap\fP interface to use.
Specify multiple \fItap\fP devices using a comma. Taps are process-
locked and can not be shared by simultaneously by multiple
guests.
Single \fItap\fP: \fBchyves\fP \fIset\fP [\fIname\fP] \fItap\fP=tap0
Multiple \fItap\fP : \fBchyves\fP \fIset\fP [\fIname\fP] \fItap\fP=tap0,tap1,tap2,tap3
mac_tap[n]=[MAC Address]
[n] is a generic number to specify the \fItap\fP interface to use
Forces a specific MAC address to be attached to the
network adapter in the guest OS. \fBchyves\fP does not check
for a valid MAC address, so double check the property.
pcidev:[n]=[spec]
Generic way to \fIadd\fP devices to the guest.
[n] is a generic random number or string
[spec] defines a virtual device added to the guest
by using a bhyve \fB-s\fP argument without the pcislot
or function argument. PCI slot numbers are assigned
automatically by \fBchyves\fP.
Examples: "pcidev:1=passthru,2/0/0"
"pcidev:2=ahci-hd,/some/place/disk.img"
os=[\fIname\fP]
Supported values are openbsd59, openbsd58, openbsd57, netbsd,
debian, d8lvm, centos6, arch, and custom. Any other value
are handled by a catch-all and largely intended for bhyveload
guests.
\fIboot\fP=[0|1]
Tells \fBchyves\fP to \fIstart\fP guests upon \fIboot\fP when "1" is \fIset\fP and
the rc.conf iohyve_enable="YES" directive is configured.
loader=[bhyveload|grub-bhyve]
Tells which loader to used to \fIboot\fP guest. bhyveload is for
FreeBSD based guests. grub-bhyve is used for all other guests.
description="<INSERT BRIEF DESCRIPTION>"
Used to describe guests. Use double quotes when using spaces.
notes="<INSERT FURTHER NOTES>"
Used to further describe guests. Use double quotes when using spaces.
bargs=[]
Used to pass flags directly to bhyve. See \fBbhyve\fP(8) for complete \fIlist\fP of
flags.
persist=[0|1|2]
Used to indicate how to handle when the bhyve process ends.
[0] - Leave powered off when bhyve process closes
[1] - Power off guest if shutdown state is detected, attempt to
reboot otherwise. This is the default.
[2] - Always attempt to reboot.
.RE
.TP
.B
\fIget\fP
Gets ZFS properties for guests
Usage: '\fBchyves\fP \fIget\fP [\fIname\fP] [\fIprop\fP]' where [\fIname\fP] is the \fIname\fP of the guest.
[\fIprop\fP] is the property you want to view.
Usage: '\fBchyves\fP \fIget\fP all [\fIname\fP]' where [\fIname\fP] is the guest \fIname\fP. All
properties are displayed.
.TP
.B
\fIrmpci\fP
Removes a pcidev from the guest
Usage: '\fBchyves\fP \fIrmpci\fP [\fIname\fP] [\fIpcidev:N\fP]' where [\fIname\fP] is the \fIname\fP
of the guest operating system. [\fIpcidev:N\fP] is the PCI
device you want removed. Ex: 'pcidev:3' If [\fB-f\fP] is supplied
before the [\fIname\fP], there is no prompt to \fIremove\fP.
.TP
.B
\fIadd\fP
Adds a new disk to the guest.
Usage: '\fBchyves\fP \fIadd\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]' where [\fIname\fP] is
the \fIname\fP of the guest, [\fIsize\fP] is the \fIsize\fP of the
virtual block device in '16G' format where the capital G
signifies gigabytes. If \fIpool\fP is specified, the disk gets
added on that \fIpool\fP
.TP
.B
\fIremove\fP
Removes a disk from the guest. Cannot be disk0.
Usage: '\fBchyves\fP \fIremove\fP [\fIname\fP] [\fIdiskN\fP]' where [\fIname\fP] is
the \fIname\fP of the guest, [\fIdiskN\fP] is the disk you would
like to \fIremove\fP from the guest. See '\fBchyves\fP \fIdisks\fP' for
a \fIlist\fP of \fIdisks\fP for a guest. If [\fB-f\fP] is supplied before the
[\fIname\fP], there is no prompt to \fIremove\fP.
.TP
.B
\fIresize\fP
Resizes a disk. THIS CAN BREAK THINGS ON THE GUEST.
Usage: '\fBchyves\fP \fIresize\fP [\fIname\fP] [\fIdiskN\fP] [\fIsize\fP]' where [\fIname\fP] is
the \fIname\fP of the guest, [\fIdiskN\fP] is the disk you would
like to \fIremove\fP from the guest, and [\fIsize\fP] is the \fIsize\fP
of the virtual block device in '16G' format where the
capital G signifies gigabytes.
See '\fBchyves\fP \fIdisks\fP' for a \fIlist\fP of \fIdisks\fP for a guest
.TP
.B
\fIdisks\fP
Lists the \fIdisks\fP attached to a guest.
Usage: '\fBchyves\fP \fIdisks\fP [\fIname\fP]' where [\fIname\fP] is the \fIname\fP
of the guest operating system.
.TP
.B
\fIsnap\fP
Take a snapshot of a guest.
Usage: '\fBchyves\fP \fIsnap\fP [\fIname\fP]@[snapshot]' where [\fIname\fP] is the
\fIname\fP of the guest and [snapshot] is what you would
like to \fIname\fP the snapshot.
.TP
.B
\fIroll\fP
Rollback guest to a snapshot.
Usage: '\fBchyves\fP \fIroll\fP [\fIname\fP]@[snapshot]' where [\fIname\fP] is the
\fIname\fP of the guest and [snapshot] is what you would
like to \fIname\fP the snapshot.
.TP
.B
\fIclone\fP
Clone a guest. Note that this will \fIclone\fP all of the properties.
If you want to use the \fIclone\fP and the original guest at the
same time you will need to change the \fItap\fP and nmdm properties
or use the \fB-r\fP option to have \fBchyves\fP do this for you
Usage: '\fBchyves\fP \fIclone\fP [\fB-c\fP | \fB-r\fP] [\fIname\fP] [\fIclonename\fP]' where [\fIname\fP]
is the \fIname\fP of the guest and [\fIclonename\fP] is what you would
like to \fIname\fP the new \fIclone\fP.
.TP
.B
\fIexport\fP
Export a guest with all of it's properties and \fIdisks\fP to a
GZip'd tarball. Property file is in a ucl-type format.
Disks output to a raw file, allowing for other managers using
ahci-hd emulation to use them. Tarball is put in the guest
dataset ex: /\fBchyves\fP/guestname/guestname.tar.gz
Usage: '\fBchyves\fP \fIexport\fP [\fIname\fP]' where [\fIname\fP] is the \fIname\fP of the
guest.
.TP
.B
\fIconsole\fP
Consoles into a guest operating system. Utilizes \fBnmdm\fP(4) and
\fBcu\fP(1) to open a \fIconsole\fP on a guest operating system. Since
\fBbhyve\fP(8) does not emulate video. The guests need to be administered
via a serial communication device. Since \fBchyves\fP uses \fBcu\fP(1), you will
need to press the tilde (~) twice then period (.) to exit the \fIconsole\fP.
To exit type "~~." quickly, sometimes hitting Enter is required first.
If that fails exit the \fIconsole\fP, try pressing tilde (~) then press
Control + D (^D). Note that on some machines, you cannot
escape the \fIconsole\fP. See \fIconreset\fP below to escape all consoles.
Usage: '\fBchyves\fP \fIconsole\fP [\fIname\fP]' where [\fIname\fP] is the \fIname\fP
of the guest operating system.
.TP
.B
\fIconreset\fP
Kills all running instances of "cu".
.TP
.B
\fIhelp\fP
Prints \fIversion\fP information and command valid syntax.
.SH EXAMPLES

Setup \fBchyves\fP on zpool named zroot:
.PP
\fBchyves\fP \fIsetup\fP \fIpool\fP=zroot
.PP
Fetch FreeBSD \fIinstall\fP \fIISO\fP for later:
.PP
\fBchyves\fP \fIfetchiso\fP ftp://ftp.freebsd.org/\.\.\./10.2/FreeBSD\.\.\..iso
.PP
Create a new FreeBSD guest named bsdguest with an 8 Gigabyte virtual HDD:
.PP
\fBchyves\fP \fIcreate\fP bsdguest 8G
.PP
List \fIISO\fP's:
.PP
\fBchyves\fP isolist
.PP
Install the FreeBSD guest bsdguest:
.PP
\fBchyves\fP \fIinstall\fP bsdguest FreeBSD-10.2-RELEASE-amd64-bootonly.iso
.PP
Console into the installation:
.PP
\fBchyves\fP \fIconsole\fP bsdguest
.PP
Once installation is done, exit \fIconsole\fP (~~.) and \fIdestroy\fP guest:
.PP
\fBchyves\fP \fIdestroy\fP bsdguest
.PP
Now that the guest is installed, it can be started like usual:
.PP
\fBchyves\fP \fIstart\fP bsdguest
.PP
Some guest os's can be gracefully stopped:
.PP
\fBchyves\fP \fIstop\fP bsdguest
.PP
List all guests created with:
.PP
\fBchyves\fP \fIlist\fP
.PP
You can change guest properties by using \fIset\fP:
.PP
\fBchyves\fP \fIset\fP bsdguest ram=512M
\fBchyves\fP \fIset\fP bsdguest cpu=1
\fBchyves\fP \fIset\fP bsdguest \fItap\fP=tap0
\fBchyves\fP \fIset\fP bsdguest con=nmdm0
.PP
Get a specific guest property:
.PP
\fBchyves\fP \fIget\fP ram bsdguest
.PP
Get all guest properties:
.PP
\fBchyves\fP \fIget\fP all bsdguest
.PP
Install and run a Debian guest:
.PP
\fBchyves\fP \fIcreate\fP debianvm 8G
\fBchyves\fP \fIset\fP debianvm loader=grub-bhyve os=debian
\fBchyves\fP \fIinstall\fP debianvm deb8.1-net.iso
\fBchyves\fP \fIstart\fP debianvm
.PP
Take a snapshot of a guest:
.PP
\fBchyves\fP \fIsnap\fP bsdguest@beforeupdate
\fBchyves\fP snaplist
\fBchyves\fP \fIroll\fP bsdguest@beforeupdate
.PP
Make an independent \fIclone\fP of a guest:
.PP
\fBchyves\fP \fIclone\fP bsdguest dolly
.SH AUTHOR
Justin D Holcomb -- @EpiJunkie
Trent -- @pr1ntf
.SH SEE ALSO
\fBbhyve\fP(8), \fBbhyveload\fP(8), \fBzfs\fP(8), \fBnmdm\fP(4), \fBcu\fP(1), \fBif_bridge\fP(4), grub2-\fBbhyve\fP(8),
\fBchyves-utils\fP(8), \fBvirtio\fP(4)
