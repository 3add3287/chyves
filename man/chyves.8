.\" Text automatically generated by txt2man
.TH chyves 8 "02 May 2016" "" "FreeBSD System Manager's Manual"
.SH NAME
\fBchyves(8) \fP- \fBbhyve\fP(8) front end manager version 0.0.0
\fB
.SH SYNOPSIS
.nf
.fam C
\fBchyves\fP \fIversion\fP
\fBchyves\fP \fIsetup\fP pool=<pool> kmod=<0|1> net=<interface-name>
\fBchyves\fP \fIlist\fP [iso|firmwares|snapshots|.config|.defaults|processes|<property-name>]
\fBchyves\fP \fIlist\fP \fItap\fP \fIactive\fP
\fBchyves\fP \fIlist\fP .config [<pool>|primary]
\fBchyves\fP \fIlist\fP \fIprocesses\fP [<name>]
\fBchyves\fP \fIinfo\fP [\fB-rvstdnakgil\fP|\fB-h\fP]
\fBchyves\fP \fIiso\fP {\fIlist\fP|fetch|rename|delete}
\fBchyves\fP \fIiso\fP \fIlist\fP
\fBchyves\fP \fIiso\fP \fIfetch\fP {http-URL|ftp-URL|local-path}
\fBchyves\fP \fIiso\fP \fIrename\fP <oldname> <newname>
\fBchyves\fP \fIiso\fP \fIdelete\fP <name>
\fBchyves\fP \fIfirmware\fP {\fIlist\fP|\fIfetch\fP|\fIrename\fP|\fIdelete\fP}
\fBchyves\fP \fIfirmware\fP \fIlist\fP
\fBchyves\fP \fIfirmware\fP \fIfetch\fP {http-URL|ftp-URL|local-path}
\fBchyves\fP \fIfirmware\fP \fIrename\fP <oldname> <newname>
\fBchyves\fP \fIfirmware\fP \fIdelete\fP <name>
\fBchyves\fP \fIcreate\fP <name> [\fIsize\fP] [\fIpool\fP]
\fBchyves\fP \fIinstall\fP <name> <\fIiso\fP-file>
\fBchyves\fP \fIload\fP [\fIname\fP] [\fIpath/to/bootdisk\fP]
\fBchyves\fP \fIboot\fP [\fIname\fP] [\fIrunmode\fP] [\fIpcidevices\fP]
\fBchyves\fP \fIstart\fP <\fIname\fP> [\fB-s\fP | \fB-a\fP]
\fBchyves\fP \fIstop\fP <\fIname\fP>
\fBchyves\fP \fIforcekill\fP <\fIname\fP>
\fBchyves\fP \fIscram\fP
\fBchyves\fP \fIdestroy\fP <\fIname\fP>
\fBchyves\fP \fIrename\fP <\fIname\fP> <newname>
\fBchyves\fP \fIdelete\fP <\fIname\fP>
\fBchyves\fP \fIset\fP <property1>=<value> {<\fIname\fP>|.defaults} [prop2=value]\.\.\.
\fBchyves\fP \fIget\fP {<property>|all} <\fIname\fP>
\fBchyves\fP \fIrmpci\fP [\fB-f\fP] [\fIname\fP] [\fIpcidev:N\fP]
\fBchyves\fP \fIadd\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]
\fBchyves\fP \fIremove\fP [\fB-f\fP] [\fIname\fP] [\fIdiskN\fP]
\fBchyves\fP \fIresize\fP [\fIname\fP] [\fIdiskN\fP] [\fIsize\fP]
\fBchyves\fP \fIdisks\fP [\fIname\fP]
\fBchyves\fP \fIsnap\fP <\fIname\fP>[@<snapshotname>]
\fBchyves\fP \fIroll\fP <\fIname\fP>[@<snapshotname>]
\fBchyves\fP \fIclone\fP [\fB-c\fP | \fB-r\fP] <\fIname\fP> <clonename>
\fBchyves\fP \fIexport\fP <\fIname\fP>
\fBchyves\fP \fIconsole\fP <\fIname\fP> \fB-t\fP
\fBchyves\fP \fIconreset\fP
\fBchyves\fP \fIhelp\fP

\fBSyntax\fP nomenclature:
 \fBlist\fP             - \fIText\fP \fIwithout\fP \fIbrackets\fP \fIare\fP \fIassumed\fP \fIto\fP \fIbe\fP required, "\fBlist\fP" \fIin\fP
                  \fBthis\fP case.
 [\fIoptional\fP]       - \fIAn\fP \fIoptional\fP \fIfield\fP
 [\fIoptional\fP|\fBlist\fP]  - \fIAn\fP \fIoptional\fP \fBlist\fP, \fIvalid\fP \fIif\fP \fInot\fP \fIused\fP
 {\fIrequire\fP|\fIlist\fP}   - \fIA\fP \fIrequire\fP \fIlist\fP \fIwhere\fP \fIone\fP \fIoption\fP \fImuch\fP \fIbe\fP \fIused\fP
 <user-\fIinput\fP>     - \fIUser\fP \fIsupplied\fP \fIinput\fP \fIfield\fP. \fIRequired\fP \fIwhen\fP \fInot\fP \fIcontain\fP \fIin\fP [ ]
 [\fB-abcdefg\fP]       - \fIAn\fP \fIoptional\fP \fIfield\fP \fIbut\fP \fImust\fP \fIstart\fP \fIwith\fP \fIa\fP "-" \fIand\fP \fIfollowed\fP \fIby\fP
                  \fIany\fP combination, \fIin\fP \fIany\fP order. Eg. "\fB-gca\fP" \fIis\fP \fIvalid\fP.
 \fIname\fP             - \fIchyves\fP \fIguest\fP \fIname\fP

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
The \fBchyves\fP(8) Bourne shell script utilizes the FreeBSD hypervisor \fBbhyve\fP(8),
\fBzfs\fP(8), \fIand\fP \fBnmdm\fP(4) \fIto\fP \fIstart\fP \fIand\fP manage type 2 virtualized guests. bhyve
settings \fIare\fP stored \fIin\fP ZFS user properties \fIand\fP datasets \fIare\fP \fIused\fP \fIto\fP store
important \fIguest\fP files such as the block devices, grub.cfg, \fIand\fP device.map
files. \fIchyves\fP uses the virtio drivers built into the GENERIC kernel
for network virtualization.
.PP
Guests \fIare\fP provided block storage \fBdevice\fP(s) via ZFS volumes on the host.
Datasets \fIare\fP \fIused\fP \fIto\fP organize these block devices \fIand\fP other important data
\fIin\fP \fIa\fP hierarchical structure. ZFS user properties \fIare\fP referenced \fIwhen\fP
starting \fIa\fP \fIguest\fP \fIto\fP \fIset\fP the values such as the CPU count, RAM allotment, \fIand\fP
other qualities about the \fIguest\fP.
.PP
.nf
.fam C
        apool/chyves
        apool/chyves/.config
        apool/chyves/Firmware
        apool/chyves/guests/
        apool/chyves/guests/.defaults
        apool/chyves/guests/bguest1
        apool/chyves/guests/bguest1/disk0
        apool/chyves/guests/bguest2
        apool/chyves/guests/bguest2/disk0
        apool/chyves/guests/bguest2/disk1
        apool/chyves/ISO


.fam T
.fi
Single \fIand\fP multi-\fIpool\fP configurations \fIare\fP supported. Additional pools \fIget\fP mounted
\fIto\fP /\fIchyves\fP/poolname \fIand\fP \fIare\fP \fIset\fP \fIto\fP \fIa\fP 'secondary' \fIpool\fP role. In the dataset
\(cq$\fIpool\fP/\fIchyves\fP/.config', the property '\fIchyves\fP:pool_role' \fIis\fP \fIused\fP \fIto\fP store the
role of that \fIpool\fP containing the \fIchyves\fP datasets. Valid values \fIare\fP
primary|secondary|offline. Only \fIa\fP single 'primary' dataset can \fIbe\fP configured per
system. Only the primary dataset contains the ISO \fIand\fP \fIfirmware\fP resources. The
primary \fIpool\fP also exclusively contains the guests/.default dataset which \fIis\fP
referenced \fIwhen\fP setting properties for new guests. The primary \fIpool\fP \fIis\fP also
\fIwhere\fP new guests \fIare\fP created \fIwhen\fP the [\fIpool\fP] argument \fIis\fP \fInot\fP specified. All
other \fIactive\fP pools need \fIto\fP \fIbe\fP \fIset\fP as \fIin\fP the "secondary" role. "offline"
pools \fIare\fP left untouched \fIand\fP \fIis\fP \fIa\fP good role \fIto\fP put \fIa\fP local replicated backup.
.PP
Example of \fIa\fP multi-\fIpool\fP dataset hierarchy:
prim_pool/\fIchyves\fP/guests/
/guests/.defaults
/.config
\fIchyves\fP:pool_role=primary
/ISO
/Firmware
secd_pool/\fIchyves\fP/guests
/.config
\fIchyves\fP:pool_role=secondary
anther_pl/\fIchyves\fP/guests
/.config
\fIchyves\fP:pool_role=secondary
offlinePL/\fIchyves\fP/guests
/.config
\fIchyves\fP:pool_role=offline
.PP
Example of \fIa\fP single \fIpool\fP dataset hierarchy:
zroot/\fIchyves\fP/guests
/guests/.defaults
/.config
\fIchyves\fP:pool_role=primary
/ISO
/Firmware
.PP
The virtio drivers \fIare\fP \fIused\fP \fIto\fP para-virtualize I/O for disk \fIand\fP network access.
ZFS volumes \fIare\fP passed as block devices \fIto\fP the guests. For the networking
portion, \fIa\fP \fIguest\fP \fIis\fP presents \fIa\fP PCI Ethernet device, the host communicates \fIwith\fP
\fBthis\fP device through \fIa\fP \fItap\fP interface which \fIin\fP-turn \fIis\fP connected \fIto\fP \fIa\fP bridge
interface which can also optionally have physical interface or vlan interface
members.
.RE
.PP


.SH OPTIONS
.TP
.B
\fIversion\fP
Prints the current running \fIversion\fP of \fIchyves\fP
.TP
.B
\fIsetup\fP
Installs required ZFS datasets, loads the necessary kernel modules,
\fIand\fP configures \fIa\fP \fItap\fP \fIand\fP bridge interface for \fIchyves\fP.
Usage: '\fIchyves\fP \fIsetup\fP \fIpool\fP=[poolname] kmod=[0|1] net=[iface]' \fIwhere\fP
[poolname] \fIis\fP the \fIpool\fP you want \fIto\fP \fIinstall\fP \fIchyves\fP on, kmod=[0|1] \fIis\fP
\fIif\fP you want \fIchyves\fP \fIto\fP \fIload\fP or unload the kernel modules. 1 \fIis\fP \fIto\fP
\fIload\fP. net=[iface] will \fIset\fP up \fIa\fP network bridge \fIto\fP the specified
interface.
.TP
.B
\fIlist\fP
Displays information about on general \fIguest\fP \fIinfo\fP \fIwith\fP the no
argument, "\fIiso\fP" will display ISOs resources, "snapshots" will
display snapshots for all guests, "\fItap\fP" will display all taps
including inactive taps, "\fItap\fP \fIactive\fP" will \fIlist\fP only \fIactive\fP taps,
\fIand\fP "con" will display configured consoles.
.RS
.TP
.B
$null
Lists properties about the guests \fIand\fP their \fIdisks\fP
using flags OS, Loader, \fIand\fP Description \fIin\fP \fIa\fP per \fIpool\fP table.
\fIto\fP control level of output. Fields include CPU count, RAM, Disk
Size, Pool, OS, Loader, Tap, Console, VMM status, Running status,
rcboot flag, \fIand\fP the description.
.TP
.B
\fIiso\fP
Lists the installed ISOs \fIin\fP the /\fIchyves\fP/ISO directory.
.TP
.B
\fIfirmware\fP
Lists the firmwares \fIin\fP the /\fIchyves\fP/Firmware directory.
.TP
.B
snapshots
List all of the snapshots for all the guests. Does \fInot\fP
show snapshots of \fIdisks\fP (they \fIare\fP there, though).
.TP
.B
\fItap\fP
Lists all of the network taps taken \fIby\fP \fIchyves\fP guests
This will \fIlist\fP taps that \fIare\fP \fInot\fP \fIactive\fP as well. Using
the argument \fIchyves\fP \fIlist\fP \fItap\fP \fIactive\fP displays only
\fIactive\fP taps.
.TP
.B
con
Lists all of the nullmodem consoles taken \fIby\fP \fIchyves\fP
guests.
.TP
.B
\fIinfo\fP
Lists all the guests along \fIwith\fP their RAM, CPU, Size,
OS, Loader, \fIand\fP Description (\fIif\fP \fB-d\fP \fIis\fP passed).
.RE
.TP
.B
fetchiso
Fetches installation ISO or \fIinstall\fP image \fIand\fP creates \fIa\fP
dataset for it.
Usage: '\fIchyves\fP fetchiso [URL]' \fIwhere\fP [URL] \fIis\fP the HTTP or FTP
URL \fIto\fP fetchiso from the internet.
.TP
.B
cpiso
Copies installation ISO or \fIinstall\fP image from your host \fIand\fP
creates \fIa\fP dataset for it.
Usage: '\fIchyves\fP cpiso [path]' \fIwhere\fP [path] \fIis\fP the full path \fIto\fP
ISO file on the host machine.
.TP
.B
renameiso
Renames an ISO
Usage: '\fIchyves\fP renameiso [ISO] [newname]' \fIwhere\fP [ISO] \fIis\fP the
\fIname\fP of the ISO you would like \fIto\fP \fIrename\fP. [newname]
\fIis\fP \fIa\fP new \fIname\fP.
.TP
.B
rmiso
Removes installed ISO from /\fIchyves\fP/ISO
Usage: '\fIchyves\fP rmiso [ISO]' \fIwhere\fP [ISO] \fIis\fP the \fIname\fP of the ISO
you would like \fIto\fP \fIdelete\fP.
.TP
.B
fetchfw
Fetches \fIfirmware\fP \fIand\fP creates \fIa\fP dataset for it.
Usage: '\fIchyves\fP fetchfw [URL]' \fIwhere\fP [URL] \fIis\fP the HTTP or FTP URL
\fIto\fP \fIfetch\fP from the internet.
.TP
.B
cpfw
Copies \fIfirmware\fP from your host \fIand\fP creates \fIa\fP dataset for it.
Usage: '\fIchyves\fP cpfw [path]' \fIwhere\fP [path] \fIis\fP the full path \fIto\fP
\fIfirmware\fP file on the host machine.
.TP
.B
renamefw
Renames \fIa\fP Firmware
Usage: '\fIchyves\fP renamefw [\fIfirmware\fP] [newname]' \fIwhere\fP [\fIfirmware\fP]
\fIis\fP the \fIname\fP of the \fIfirmware\fP you would like \fIto\fP \fIrename\fP.
[newname] \fIis\fP \fIa\fP new \fIname\fP.
.TP
.B
rmfw
Removes installed \fIfirmware\fP from /\fIchyves\fP/Firmware
Usage: '\fIchyves\fP rmfw [\fIfirmware\fP]' \fIwhere\fP [\fIfirmware\fP] \fIis\fP the \fIname\fP of
the \fIfirmware\fP you would like \fIto\fP \fIdelete\fP.
.TP
.B
\fIcreate\fP
Creates new \fIguest\fP operating system.
Usage: '\fIchyves\fP \fIcreate\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]' \fIwhere\fP [\fIname\fP] \fIis\fP
the \fIname\fP you would like \fIto\fP use, [\fIsize\fP] \fIis\fP the \fIsize\fP of the
virtual block device \fIin\fP '16G' format \fIwhere\fP the capital G
signifies gigabytes. If you specify the \fIpool\fP, the first disk
gets added on that \fIpool\fP.
.TP
.B
\fIinstall\fP
Loads \fIand\fP boots into ISO for \fIguest\fP installation.
Usage: '\fIchyves\fP \fIinstall\fP [\fIname\fP] [ISO]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP, \fIand\fP [ISO] \fIis\fP the \fIname\fP of the ISO you would
like \fIto\fP \fIboot\fP from \fIin\fP the form of: 'install.iso'
.TP
.B
\fIload\fP
Loads the \fIguest\fP operating system bootloader \fIand\fP resources.
Usage: '\fIchyves\fP \fIload\fP [\fIname\fP] [ISO]'
\fIwhere\fP [\fIname\fP]\fIis\fP the \fIname\fP of the \fIguest\fP operating system.
[bootimg] \fIis\fP the path \fIto\fP the \fIboot\fP medium
.TP
.B
\fIboot\fP
Boots the \fIguest\fP into the operating system. '\fIchyves\fP run' needs
\fIto\fP \fIbe\fP run before \fBthis\fP \fIis\fP done.
Usage: '\fIchyves\fP \fIboot\fP [\fIname\fP] [\fIrunmode\fP] [pci]'
\fIwhere\fP [\fIname\fP]\fIis\fP the \fIname\fP of the \fIguest\fP operating system.
[\fIrunmode\fP] describes how \fIto\fP \fIstart\fP the \fIguest\fP:
0 = \fIstart\fP only once
1 = regular persist
Stop \fIif\fP the \fIguest\fP \fIis\fP powering off
2 = always persist
Always restart the \fIguest\fP
[pci] \fIis\fP \fIa\fP space separated \fIlist\fP of pci devices
based on slot-less bhyve \fB-s\fP commands.
Example:
"ahci-hd,/path/disk.img virtio-net,tap0"
Note: hostbridge \fIand\fP lpc \fIare\fP automatically
added
.TP
.B
\fIstart\fP
Starts the \fIguest\fP operating system. (Combines \fIload\fP & \fIboot\fP)
Usage: '\fIchyves\fP \fIstart\fP [\fIname\fP] [\fB-s\fP | -\fIa\fP]'
\fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP of the \fIguest\fP operating system.
[\fB-s\fP] will cause the \fIguest\fP \fIto\fP \fIbe\fP started once
[-\fIa\fP] will cause the \fIguest\fP \fIto\fP always restart
.TP
.B
\fIstop\fP
Gracefully stops \fIguest\fP operating system.
Usage: '\fIchyves\fP \fIstop\fP [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP operating system.
.RE
.PP

.RS
.TP
.B
\fIforcekill\fP
Forces the \fIguest\fP \fIto\fP \fIstop\fP. Runs kill \fB-9\fP \fIand\fP destroys the \fIguest\fP
\fIin\fP VMM. USE WITH EXTREME CAUTION AND AS \fIA\fP LAST RESORT. Can \fIbe\fP
\fIused\fP \fIto\fP kill guests stuck at the GRUB \fIconsole\fP that you
do \fInot\fP have access \fIto\fP.
.TP
.B
\fIscram\fP
Gracefully \fIstop\fP all bhyve guests. Does \fInot\fP \fIdestroy\fP resources.
.TP
.B
\fIdestroy\fP
Destroys \fIguest\fP resources.
Usage: '\fIchyves\fP \fIdestroy\fP [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP operating system. Destroying \fIa\fP \fIguest\fP does
\fInot\fP [\fIdelete\fP] \fIa\fP \fIguest\fP from the host, it destroys the \fIguest\fP \fIin\fP VMM.
.TP
.B
\fIrename\fP
Renames the \fIguest\fP
Usage: '\fIchyves\fP \fIrename\fP [\fIname\fP] [newname]' \fIwhere\fP [\fIname\fP] \fIis\fP the
\fIname\fP of the \fIguest\fP \fIand\fP [newname] \fIis\fP the new \fIname\fP.
.TP
.B
\fIdelete\fP
Deletes all data for the \fIguest\fP.
Usage: '\fIchyves\fP \fIdelete\fP [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP operating system. If [\fB-f\fP] \fIis\fP \fIsupplied\fP before the
[\fIname\fP], there \fIis\fP no prompt \fIto\fP \fIdelete\fP.
.TP
.B
\fIset\fP
Sets ZFS properties for guests \fIone\fP at \fIa\fP time
Usage: '\fIchyves\fP \fIset\fP [\fIname\fP] [prop1=value] [prop2=value]\.\.\.' \fIwhere\fP
[\fIname\fP] \fIis\fP the \fIname\fP of the \fIguest\fP operating system.
Using the [\fIname\fP] '.defaults' sets the defaults for newly created
guests. Only ram, cpu, persist, \fIboot\fP, loader, os, \fIand\fP bargs
properties \fIare\fP \fIused\fP as defaults for new guests.
.RS
.PP
Guest Properties:
ram=[nS]
[n] \fIis\fP \fIa\fP number \fIand\fP [S] \fIis\fP the \fIsize\fP \fIin\fP M megabytes or G gigabytes.
ram=2G for 2 Gigabytes of RAM allocation.
cpu=[n]
Sets number [n] of cpu cores \fIto\fP use, up \fIto\fP 16.
\fIsize\fP=[nS]
Used during \fIsetup\fP only \fIto\fP indicate the block \fIsize\fP of the first
harddrive. Resetting \fBthis\fP property does \fInot\fP \fIresize\fP the block
device. Please use \fIchyves\fP \fIresize\fP instead.
[n] \fIis\fP \fIa\fP number \fIin\fP *bytes.
[S] \fIis\fP the \fIsize\fP \fIin\fP "" bytes, "K" Kilobytes, "M" Megabytes, "G"
gigabytes, or "T" Terabytes.
con=nmdm[n]
Attaches null modem \fIconsole\fP. [n] \fImust\fP \fIbe\fP \fIa\fP unique number \fIand\fP
can \fInot\fP \fIbe\fP shared between started guests.
uuid= Sets UUID for bhyve instance. \fIRequired\fP \fIwhen\fP importing
Windows guests for retaining license activation \fIbut\fP other
uses as well. Normally \fIset\fP \fIby\fP /bin/uuidgen at creation.
\fItap\fP=\fItap\fP[n](,\fItap\fP[n]) (\fItap\fP device for virtio-net)
[n] \fIis\fP \fIa\fP generic number \fIto\fP specify the \fItap\fP interface \fIto\fP use.
Specify multiple \fItap\fP devices using \fIa\fP comma. Taps \fIare\fP process-
locked \fIand\fP can \fInot\fP \fIbe\fP shared \fIby\fP simultaneously \fIby\fP multiple
guests.
Single \fItap\fP: \fIchyves\fP \fIset\fP [\fIname\fP] \fItap\fP=tap0
Multiple \fItap\fP : \fIchyves\fP \fIset\fP [\fIname\fP] \fItap\fP=tap0,tap1,tap2,tap3
mac_tap[n]=[MAC Address]
[n] \fIis\fP \fIa\fP generic number \fIto\fP specify the \fItap\fP interface \fIto\fP use
Forces \fIa\fP specific MAC address \fIto\fP \fIbe\fP attached \fIto\fP the
network adapter \fIin\fP the \fIguest\fP OS. \fIchyves\fP does \fInot\fP check
for \fIa\fP \fIvalid\fP MAC address, so double check the property.
pcidev:[n]=[spec]
Generic way \fIto\fP \fIadd\fP devices \fIto\fP the \fIguest\fP.
[n] \fIis\fP \fIa\fP generic random number or string
[spec] defines \fIa\fP virtual device added \fIto\fP the \fIguest\fP
\fIby\fP using \fIa\fP bhyve \fB-s\fP argument \fIwithout\fP the pcislot
or function argument. PCI slot numbers \fIare\fP assigned
automatically \fIby\fP \fIchyves\fP.
Examples: "pcidev:1=passthru,2/0/0"
"pcidev:2=ahci-hd,/some/place/disk.img"
os=[\fIname\fP]
Supported values \fIare\fP freebsd, openbsd59, openbsd58, openbsd57,
netbsd, debian, d8lvm, centos6, centos7, arch, gentoo \fIand\fP custom.
Any other values \fIare\fP handled \fIby\fP \fIa\fP catch-all. There \fIis\fP no special
handling for "freebsd" guests except \fIwhen\fP the CPU lacks the UG
feature on Intel CPUs, then only guests \fIwith\fP "freebsd" as the "os"
property \fIare\fP allowed \fIto\fP \fIstart\fP due \fIto\fP bhyve limitations.
\fIboot\fP=[0|<positive-integer>]
Tells \fIchyves\fP \fIto\fP \fIstart\fP guests upon host \fIboot\fP \fIa\fP positive integer \fIis\fP
assigned. The integer respresents the \fIboot\fP priority \fIwhere\fP the
highest numbered \fIguest\fP \fIis\fP started first. The iohyve_enable="YES"
directive \fImust\fP \fIbe\fP configured \fIin\fP /etc/rc.conf for \fBthis\fP \fIto\fP work.
loader=[bhyveload|grub-bhyve|uefi]
Tells which loader \fIto\fP \fIused\fP \fIto\fP \fIboot\fP \fIguest\fP. bhyveload \fIis\fP for
FreeBSD based guests. grub-bhyve \fIis\fP \fIused\fP for all other guests.
description="<INSERT BRIEF DESCRIPTION>"
Used \fIto\fP describe guests. Use double quotes \fIwhen\fP using spaces.
notes="<INSERT FURTHER NOTES>"
Used \fIto\fP further describe guests. Use double quotes \fIwhen\fP using
spaces.
bargs=[]
For use \fIby\fP advanced users \fIto\fP pass additional flags directly \fIto\fP
bhyve. See \fBbhyve\fP(8) for complete \fIlist\fP of flag options. Not \fIto\fP \fIbe\fP
changed unless directed. To see complete \fIlist\fP of flags \fIused\fP \fIby\fP
\fIchyves\fP, turn dev_mode \fIto\fP "on" on the primary \fIpool\fP.
persist=[0|1|2]
Used \fIto\fP indicate how \fIto\fP handle \fIwhen\fP the bhyve process ends.
[0] - Leave powered off \fIwhen\fP bhyve process closes
[1] - Power off \fIguest\fP \fIif\fP shutdown state \fIis\fP detected, attempt \fIto\fP
reboot otherwise. This \fIis\fP the default.
[2] - Always attempt \fIto\fP reboot.
.PP
Dataset Properties:
pool_version=
dataset_role=[primary|secondary|offline]
Important purpose \fIin\fP multi-\fIpool\fP configurations, each role type
has different characteristics as explained below:
primary - Used \fIto\fP store the ISO \fIand\fP Firmware resources for guests.
The primary reference point for dev_mode property. New
\fIguest\fP also default \fIto\fP \fBthis\fP \fIpool\fP unless specified as \fIa\fP
parameter for \fIchyves\fP \fIcreate\fP. Only \fIone\fP ZFS \fIpool\fP can \fIbe\fP \fIin\fP
the primary role.
secondary - Used for all other \fIactive\fP guests \fInot\fP stored on the
primary ZFS \fIpool\fP.
offline - Guests hosted on pools \fIin\fP \fBthis\fP \fIroll\fP can \fInot\fP \fIbe\fP started
\fIand\fP \fIare\fP \fInot\fP shown unless specified for \fIlist\fP or \fIinfo\fP.
dev_mode=[off|on]
Setting \fIto\fP "on" for the primary \fIpool\fP activates the following
features:
Displays the full bhyve command \fIused\fP \fIto\fP \fIstart\fP \fIa\fP \fIguest\fP.
Allows for functions \fIto\fP \fIbe\fP called from the command line via
\fIchyves\fP dev [function|command] "arg1" "arg2" "arg3" \.\.\.. "arg8"
the parameters \fIare\fP function indexed \fIand\fP only eight parameters \fIare\fP
possible due \fIto\fP the way Bourne addresses param[10].
.RE
.TP
.B
\fIget\fP
Gets ZFS properties for guests
Usage: '\fIchyves\fP \fIget\fP [prop] [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP of the
\fIguest\fP. [prop] \fIis\fP the property you want \fIto\fP view.
Usage: '\fIchyves\fP \fIget\fP all [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIguest\fP \fIname\fP. All
properties \fIare\fP displayed.
Usage: '\fIchyves\fP \fIget\fP all' All
properties \fIare\fP displayed.
.TP
.B
\fIrmpci\fP
Removes \fIa\fP pcidev from the \fIguest\fP
Usage: '\fIchyves\fP \fIrmpci\fP [\fIname\fP] [\fIpcidev:N\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP operating system. [\fIpcidev:N\fP] \fIis\fP the PCI
device you want removed. Ex: 'pcidev:3' If [\fB-f\fP] \fIis\fP \fIsupplied\fP
before the [\fIname\fP], there \fIis\fP no prompt \fIto\fP \fIremove\fP.
.TP
.B
\fIadd\fP
Adds \fIa\fP new disk \fIto\fP the \fIguest\fP.
Usage: '\fIchyves\fP \fIadd\fP [\fIname\fP] [\fIsize\fP] [[\fIpool\fP]]' \fIwhere\fP [\fIname\fP] \fIis\fP
the \fIname\fP of the \fIguest\fP, [\fIsize\fP] \fIis\fP the \fIsize\fP of the
virtual block device \fIin\fP '16G' format \fIwhere\fP the capital G
signifies gigabytes. If \fIpool\fP \fIis\fP specified, the disk gets
added on that \fIpool\fP
.TP
.B
\fIremove\fP
Removes \fIa\fP disk from the \fIguest\fP. Cannot \fIbe\fP disk0.
Usage: '\fIchyves\fP \fIremove\fP [\fIname\fP] [\fIdiskN\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP
the \fIname\fP of the \fIguest\fP, [\fIdiskN\fP] \fIis\fP the disk you would
like \fIto\fP \fIremove\fP from the \fIguest\fP. See '\fIchyves\fP \fIdisks\fP' for
\fIa\fP \fIlist\fP of \fIdisks\fP for \fIa\fP \fIguest\fP. If [\fB-f\fP] \fIis\fP \fIsupplied\fP before the
[\fIname\fP], there \fIis\fP no prompt \fIto\fP \fIremove\fP.
.TP
.B
\fIresize\fP
Resizes \fIa\fP disk. THIS CAN BREAK THINGS ON THE GUEST.
Usage: '\fIchyves\fP \fIresize\fP [\fIname\fP] [\fIdiskN\fP] [\fIsize\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP
the \fIname\fP of the \fIguest\fP, [\fIdiskN\fP] \fIis\fP the disk you would
like \fIto\fP \fIremove\fP from the \fIguest\fP, \fIand\fP [\fIsize\fP] \fIis\fP the \fIsize\fP
of the virtual block device \fIin\fP '16G' format \fIwhere\fP the
capital G signifies gigabytes.
See '\fIchyves\fP \fIdisks\fP' for \fIa\fP \fIlist\fP of \fIdisks\fP for \fIa\fP \fIguest\fP
.TP
.B
\fIdisks\fP
Lists the \fIdisks\fP attached \fIto\fP \fIa\fP \fIguest\fP.
Usage: '\fIchyves\fP \fIdisks\fP [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP operating system.
.TP
.B
\fIsnap\fP
Take \fIa\fP snapshot of \fIa\fP \fIguest\fP.
Usage: '\fIchyves\fP \fIsnap\fP [\fIname\fP]@[snapshot]' \fIwhere\fP [\fIname\fP] \fIis\fP the
\fIname\fP of the \fIguest\fP \fIand\fP [snapshot] \fIis\fP what you would
like \fIto\fP \fIname\fP the snapshot.
.TP
.B
\fIroll\fP
Rollback \fIguest\fP \fIto\fP \fIa\fP snapshot.
Usage: '\fIchyves\fP \fIroll\fP [\fIname\fP]@[snapshot]' \fIwhere\fP [\fIname\fP] \fIis\fP the
\fIname\fP of the \fIguest\fP \fIand\fP [snapshot] \fIis\fP what you would
like \fIto\fP \fIname\fP the snapshot.
.TP
.B
\fIclone\fP
Clone \fIa\fP \fIguest\fP. Note that \fBthis\fP will \fIclone\fP all of the properties.
If you want \fIto\fP use the \fIclone\fP \fIand\fP the original \fIguest\fP at the
same time you will need \fIto\fP change the \fItap\fP \fIand\fP nmdm properties
or use the \fB-r\fP \fIoption\fP \fIto\fP have \fIchyves\fP do \fBthis\fP for you
Usage: '\fIchyves\fP \fIclone\fP [\fB-c\fP | \fB-r\fP] [\fIname\fP] [clonename]' \fIwhere\fP [\fIname\fP]
\fIis\fP the \fIname\fP of the \fIguest\fP \fIand\fP [clonename] \fIis\fP what you would
like \fIto\fP \fIname\fP the new \fIclone\fP.
.TP
.B
\fIexport\fP
Export \fIa\fP \fIguest\fP \fIwith\fP all of it's properties \fIand\fP \fIdisks\fP \fIto\fP \fIa\fP
GZip'd tarball. Property file \fIis\fP \fIin\fP \fIa\fP ucl-type format.
Disks output \fIto\fP \fIa\fP raw file, allowing for other managers using
ahci-hd emulation \fIto\fP use them. Tarball \fIis\fP put \fIin\fP the \fIguest\fP
dataset ex: /\fIchyves\fP/guestname/guestname.tar.gz
Usage: '\fIchyves\fP \fIexport\fP [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP of the
\fIguest\fP.
.TP
.B
\fIconsole\fP
Consoles into \fIa\fP \fIguest\fP operating system. Utilizes \fBnmdm\fP(4) \fIand\fP
\fBcu\fP(1) \fIto\fP open \fIa\fP \fIconsole\fP on \fIa\fP \fIguest\fP operating system. Since
\fBbhyve\fP(8) does \fInot\fP emulate video. The guests need \fIto\fP \fIbe\fP administered
via \fIa\fP serial communication device. Since \fIchyves\fP uses \fBcu\fP(1), you will
need \fIto\fP press the tilde (~) twice then period (.) \fIto\fP exit the
\fIconsole\fP. To exit type "~~." quickly, sometimes hitting Enter \fIis\fP
required first. If that fails exit the \fIconsole\fP, try pressing tilde
(~) then press Control + D (^D). Note that on some machines, you
cannot escape the \fIconsole\fP. See \fIconreset\fP below \fIto\fP escape all
consoles.
Usage: '\fIchyves\fP \fIconsole\fP [\fIname\fP]' \fIwhere\fP [\fIname\fP] \fIis\fP the \fIname\fP
of the \fIguest\fP operating system.
.TP
.B
\fIconreset\fP
Kills all running instances of "cu".
.TP
.B
\fIhelp\fP
Prints \fIversion\fP information \fIand\fP command \fIvalid\fP syntax.
.SH EXAMPLES

Setup \fIchyves\fP on zpool named zroot:
.PP
.nf
.fam C
  chyves setup pool=zroot

.fam T
.fi
Fetch FreeBSD \fIinstall\fP ISO for later:
.PP
.nf
.fam C
  chyves fetchiso ftp://ftp.freebsd.org/\.\.\./10.2/FreeBSD\.\.\..iso

.fam T
.fi
Create \fIa\fP new FreeBSD \fIguest\fP named bsdguest \fIwith\fP an 8 Gigabyte virtual HDD:
.PP
.nf
.fam C
  chyves create bsdguest 8G

.fam T
.fi
List ISO's:
.PP
.nf
.fam C
  chyves isolist

.fam T
.fi
Install the FreeBSD \fIguest\fP bsdguest:
.PP
.nf
.fam C
  chyves install bsdguest FreeBSD-10.2-RELEASE-amd64-bootonly.iso

.fam T
.fi
Console into the installation:
.PP
.nf
.fam C
  chyves console bsdguest

.fam T
.fi
Once installation \fIis\fP done, exit \fIconsole\fP (~~.) \fIand\fP \fIdestroy\fP \fIguest\fP:
.PP
.nf
.fam C
  chyves destroy bsdguest

.fam T
.fi
Now that the \fIguest\fP \fIis\fP installed, it can \fIbe\fP started like usual:
.PP
.nf
.fam C
  chyves start bsdguest

.fam T
.fi
Some \fIguest\fP os's can \fIbe\fP gracefully stopped:
.PP
.nf
.fam C
  chyves stop bsdguest

.fam T
.fi
List all guests created \fIwith\fP:
.PP
.nf
.fam C
  chyves list

.fam T
.fi
You can change \fIguest\fP properties \fIby\fP using \fIset\fP:
.PP
.nf
.fam C
  chyves set bsdguest ram=512M
  chyves set bsdguest cpu=1
  chyves set bsdguest tap=tap0
  chyves set bsdguest con=nmdm0

.fam T
.fi
Get \fIa\fP specific \fIguest\fP property:
.PP
.nf
.fam C
  chyves get ram bsdguest

.fam T
.fi
Get all \fIguest\fP properties:
.PP
.nf
.fam C
  chyves get all bsdguest

.fam T
.fi
Install \fIand\fP run \fIa\fP Debian \fIguest\fP:
.PP
.nf
.fam C
  chyves create debianvm 8G
  chyves set debianvm loader=grub-bhyve os=debian
  chyves install debianvm deb8.1-net.iso
  chyves start debianvm

.fam T
.fi
Take \fIa\fP snapshot of \fIa\fP \fIguest\fP:
.PP
.nf
.fam C
  chyves snap bsdguest@beforeupdate
  chyves snaplist
  chyves roll bsdguest@beforeupdate

.fam T
.fi
Make an independent \fIclone\fP of \fIa\fP \fIguest\fP:
.PP
.nf
.fam C
  chyves clone bsdguest dolly

.fam T
.fi
.SH AUTHOR
Justin D Holcomb -- @EpiJunkie
Trent -- @pr1ntf
.SH SEE ALSO
\fBbhyve\fP(8), \fBbhyveload\fP(8), \fBzfs\fP(8), \fBnmdm\fP(4), \fBcu\fP(1), \fBif_bridge\fP(4), grub2-\fBbhyve\fP(8),
\fBchyves-utils\fP(8), \fBvirtio\fP(4)
